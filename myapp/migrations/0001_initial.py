# Generated by Django 5.1.2 on 2024-11-04 07:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InputParameters',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('target_nh3_production_ktpa', models.IntegerField()),
                ('max_iex_sale_perc', models.FloatField()),
                ('max_ci_kg_CO2_kg_H2', models.FloatField()),
                ('max_ci_t_CO2_t_NH3', models.FloatField()),
                ('number_of_solar_sites', models.PositiveIntegerField()),
                ('number_of_wind_sites', models.PositiveIntegerField()),
                ('excel_file', models.CharField(max_length=100)),
                ('version', models.PositiveIntegerField()),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDetail',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Electrolyzer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lower_end_range_elz_loading', models.FloatField()),
                ('specific_power_actual_generation_kwh_per_kg_h2', models.FloatField()),
                ('ac_dc_conversion_losses_perc', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionCosting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('capex', models.CharField(max_length=100)),
                ('uom', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Battery_Assumptions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('battery_capacity_power_rating', models.FloatField()),
                ('battery_energy_rating', models.FloatField()),
                ('roundtrip_loss_total', models.FloatField()),
                ('roundtrip_efficiency_charging_leg', models.FloatField()),
                ('roundtrip_efficiency_discharging_leg', models.FloatField()),
                ('battery_discharge_depth', models.FloatField()),
                ('battery_other_losses', models.FloatField()),
                ('usable_battery_energy_rating', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Nh3_H2_Inputs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nh3_h2_multiplier', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='NH3_Plant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nh3_tpd', models.FloatField()),
                ('nh3_power_requirement_mw', models.FloatField()),
                ('capex_usd_mn', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Operational_Inputs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('elz_min_turndown', models.FloatField()),
                ('elz_availability', models.FloatField()),
                ('nh3_plant_availability', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='OperationalCosting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('npv_of_opex', models.CharField(max_length=100)),
                ('uom', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Plant_Shutdown',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('no_of_days', models.IntegerField()),
                ('month_of_shutdown', models.IntegerField()),
                ('shutdown_from_day_of_month', models.IntegerField()),
                ('shutdown_till_day_of_month', models.IntegerField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.AddField(
            model_name='inputparameters',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.projectdetail'),
        ),
        migrations.CreateModel(
            name='Psp_Assumptions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('psp_turbine_capacity_power_rating', models.FloatField()),
                ('psp_energy_rating', models.FloatField()),
                ('roundtrip_efficiency_charging_leg', models.FloatField()),
                ('roundtrip_efficiency_discharging_leg', models.FloatField()),
                ('pump_capacity', models.FloatField()),
                ('incident_power_threshold_perc_charging', models.FloatField()),
                ('incident_power_threshold_mw_charging', models.FloatField()),
                ('incident_power_threshold_perc_discharging', models.FloatField()),
                ('incident_power_threshold_mw_discharging', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Solar_Assumptions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('solar_ehv_line_loss', models.FloatField()),
                ('solar_plant_availability', models.FloatField()),
                ('solar_grid_availability', models.FloatField()),
                ('ctu_loss', models.FloatField()),
                ('stu_loss', models.FloatField()),
                ('loss_at_load_end', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='SolarProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_of_year', models.IntegerField()),
                ('time', models.IntegerField()),
                ('unit', models.PositiveIntegerField(null=True)),
                ('generation_value', models.FloatField()),
                ('cuf', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='Wind_Assumptions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ctu_loss', models.FloatField()),
                ('stu_loss', models.FloatField()),
                ('loss_at_load_end', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
        migrations.CreateModel(
            name='WindProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_of_year', models.IntegerField()),
                ('time', models.IntegerField()),
                ('unit', models.PositiveIntegerField(null=True)),
                ('generation_value', models.FloatField()),
                ('cuf', models.FloatField()),
                ('mw_per_turbine', models.FloatField()),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.inputparameters')),
            ],
        ),
    ]
